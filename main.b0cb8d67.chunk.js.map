{"version":3,"sources":["components/Header.js","context/AppReducer.js","context/GlobalState.js","components/Balance.js","components/IncomeExpenses.js","components/Transaction.js","components/TransactionList.js","components/AddTransaction.js","App.js","index.js"],"names":["Header","style","color","state","action","type","transactions","filter","transaction","id","payload","initialState","text","amount","GlobalContext","createContext","GlobalProvider","children","useReducer","AppReducer","dispatch","Provider","value","deleteTransaction","addTransaction","Balance","total","useContext","map","reduce","acc","item","toFixed","IncomeExpenses","amounts","income","expense","className","Transaction","sign","Math","abs","onClick","TransactionList","hideVar","document","getElementById","display","AddTransaction","useState","setText","setAmount","onSubmit","event","preventDefault","newTransaction","floor","random","htmlFor","onChange","target","placeholder","App","ReactDOM","render"],"mappings":"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","file":"static/js/main.b0cb8d67.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport const Header = () => {\r\n    return (\r\n        <div>\r\n            <h2 style={{color: 'blue'}}>Expense Tracker</h2>\r\n        </div>\r\n    )\r\n}\r\n","export default (state, action) => {\r\n    switch(action.type) {\r\n\r\n        case 'DELETE_TRANSACTION':\r\n            return {\r\n                ...state,\r\n                transactions: state.transactions.filter(transaction => transaction.id !== action.payload)\r\n            }\r\n\r\n        case 'ADD_TRANSACTION':\r\n            return {\r\n                ...state,\r\n            transactions: [action.payload, ...state.transactions]\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import { createContext, useReducer } from 'react';\r\nimport AppReducer from './AppReducer';\r\n\r\n \r\n//Initial state\r\nconst initialState = {\r\n    transactions: [\r\n        { id: 1, text: 'Sweets', amount: -60 },\r\n        { id: 2, text: 'Salary', amount: 500 },\r\n        { id: 3, text: 'Book', amount: -20 },\r\n        { id: 4, text: 'Guitar', amount: 160 }\r\n    ]\r\n}\r\n\r\n//Create Context\r\nexport const GlobalContext = createContext(initialState);\r\n\r\n//Provider Component\r\nexport const GlobalProvider = ({ children }) => {\r\n    const [state, dispatch] = useReducer(AppReducer, initialState);\r\n\r\n    \r\n    //Actions\r\n    function deleteTransaction(id) {\r\n        dispatch({\r\n            type: 'DELETE_TRANSACTION',\r\n            payload: id\r\n        });\r\n    }\r\n\r\n    function addTransaction(transaction) {\r\n        dispatch({\r\n            type: 'ADD_TRANSACTION',\r\n            payload: transaction\r\n        });\r\n    }\r\n\r\n\r\n    return (\r\n        <GlobalContext.Provider value={{\r\n            transactions: state.transactions,\r\n            deleteTransaction,\r\n            addTransaction\r\n        }}>\r\n            {children}\r\n        </GlobalContext.Provider>\r\n    )\r\n}","import React, { useContext } from 'react';\r\nimport { GlobalContext } from '../context/GlobalState';\r\n\r\nexport const Balance = () => {\r\n    const { transactions } = useContext(GlobalContext);\r\n\r\n    const amounts = transactions.map(transaction => transaction.amount);\r\n    const total = amounts.reduce((acc, item) => (acc += item), 0).toFixed(2);\r\n\r\n    return (\r\n        <>\r\n            <h4>Your Balance</h4>\r\n            <h1> ${total}</h1>\r\n        </>\r\n    )\r\n}\r\n","import React, { useContext } from 'react';\r\nimport { GlobalContext } from '../context/GlobalState';\r\n\r\nexport const IncomeExpenses = () => {\r\n    const { transactions } = useContext(GlobalContext);\r\n\r\n    const amounts = transactions.map(transaction => transaction.amount);\r\n\r\n    const income = amounts\r\n        .filter(item => item > 0)\r\n        .reduce((acc, item) => (acc += item), 0)\r\n        .toFixed(2);\r\n\r\n    const expense = (\r\n        amounts.filter(item => item < 0).reduce((acc, item) => (acc += item), 0)*\r\n        -1\r\n        ).toFixed(2);\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"inc-exp-container\">\r\n            <div>\r\n                <h4>Income</h4>\r\n                <p className=\"money plus\">{income}</p>\r\n            </div>\r\n            <div>\r\n                <h4>Expense</h4>\r\n                <p className=\"money minus\">{expense}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useContext } from 'react';\r\nimport { GlobalContext } from '../context/GlobalState';\r\n\r\nexport const Transaction = ({ transaction }) => {\r\n    const { deleteTransaction } = useContext(GlobalContext);\r\n\r\n    const sign = transaction.amount < 0 ? '-' : '+';\r\n\r\n    return (\r\n        <li className={transaction.amount < 0 ? 'minus' : 'plus'}>\r\n            {transaction.text} <span>{sign}${Math.abs(transaction.amount)}</span>\r\n            <button onClick={() => deleteTransaction(transaction.id)} className=\"delete-btn\">x</button>\r\n        </li>\r\n    )\r\n}\r\n","import React, { useContext } from 'react';\r\nimport { Transaction } from './Transaction';\r\n\r\nimport { GlobalContext } from '../context/GlobalState';\r\nimport { getByDisplayValue } from '@testing-library/react';\r\n\r\nexport const TransactionList = () => {\r\n    const { transactions } = useContext(GlobalContext);\r\n\r\nlet hideVar=true;\r\n        function hideHistory(){\r\n            if(hideVar){\r\n                document.getElementById(\"transactionList-id\").style.display='none';\r\n                hideVar = false;\r\n            }else{\r\n                document.getElementById(\"transactionList-id\").style.display='block';\r\n                hideVar = true;\r\n            }\r\n        }\r\n\r\n    return (\r\n        <>\r\n           <h3 id=\"history-h3-id\" onClick={hideHistory}>History</h3>\r\n           <ul id=\"transactionList-id\" className=\"list\">\r\n                {transactions.map(transaction => (<Transaction key={transaction.id} transaction={transaction} />))}     \r\n           </ul>\r\n\r\n        </>\r\n    )\r\n}\r\n","import React, { useState, useContext } from 'react';\r\nimport { GlobalContext } from '../context/GlobalState';\r\n\r\n\r\nexport const AddTransaction = () => {\r\n    const [text, setText] = useState('');\r\n    const [amount, setAmount] = useState(0);\r\n\r\n    const { addTransaction } = useContext(GlobalContext);\r\n\r\n    const onSubmit = event => {\r\n        event.preventDefault();\r\n\r\n        const newTransaction = {\r\n            id: Math.floor(Math.random() * 100000000),\r\n            text,\r\n            amount: + amount\r\n        }\r\n\r\n        addTransaction(newTransaction);\r\n    }\r\n\r\n    function visibleHistory(){\r\n        document.getElementById(\"transactionList-id\").style.display='block';\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <h3>Add new transaction</h3>\r\n            <form onSubmit={onSubmit}>\r\n                <div className=\"form-control\">\r\n                    <label htmlFor=\"text\">Text</label>\r\n                    <input type=\"text\" value={text} onChange={(event) => setText(event.target.value)} \r\n                    placeholder=\"Enter text...\" />\r\n                </div>\r\n                <div className=\"form-control\">\r\n                    <label htmlFor=\"amount\"\r\n                    >Amount<br />\r\n                    (negative - expense, positive - income) </label>\r\n\r\n                    <input type=\"number\" value={amount} onChange={(event) => setAmount(event.target.value)} placeholder=\"Enter amount...\" />\r\n                    <div>\r\n                        <button className=\"btn\" onClick={visibleHistory}>Add transaction</button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport { Header } from './components/Header';\nimport { Balance } from './components/Balance';\nimport { IncomeExpenses } from './components/IncomeExpenses';\nimport { TransactionList } from './components/TransactionList';\nimport { AddTransaction } from './components/AddTransaction';\n\nimport { GlobalProvider } from './context/GlobalState';\n\nimport './App.css';\n\n\nfunction App() {\n  return (\n    <GlobalProvider>\n      <Header />\n      <div className=\"container\">\n        <Balance />\n        <IncomeExpenses />\n        <TransactionList />\n        <AddTransaction />\n      </div>\n    </GlobalProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\n"],"sourceRoot":""}